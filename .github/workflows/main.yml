name: chatapp
run-name: "Run #${{ github.run_number }} for ${{ github.ref_name }} by @${{ github.actor }}"
on: [push]

# env:
#   PY_VERSION: "3.10.10"
#   CLOUD_CONNECTION_STRING: ${{secrets.CLOUD_CONNECTION_STRING}}

jobs:
  integration:
    working_directory: ~/class-chat

    steps:
      # Code Checkout
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install

      - name: Lint code with ESLint
        run: |
          npm run lint
        continue-on-error: true

      # - name: Autoformat code with Prettier
      #   run: |
      #     autopep8 --aggressive --list-fixes main.py

      # - name: Test with PyTest
      #   run: pytest test_queries.py --doctest-modules --junitxml=junit/test-results-${{ github.ref_name }}.xml

      # - name: Upload pytest test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-results-${{ github.ref_name }}.xml
      #     path: junit/test-results-${{ github.ref_name }}.xml
      #   if: ${{ always() }}

  # delivery:
  #   runs-on: ubuntu-22.04
  #   needs: integration
  #   if: github.ref_name == 'master' || startsWith(github.ref, 'refs/tags')

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           ${{ vars.DOCKER_HUB_USER }}/mongo_api
  #         # generate Docker tags based on the following events/attributes
  #         tags: |
  #           type=schedule
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to Docker Hub
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ vars.DOCKER_HUB_USER }}
  #         password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
